@model Tapas.Backend.UserManagement.Areas.Backend.Models.Roles.ListRoles.ListRolesViewModel
@{
    ViewData[ "Title" ] = "Manage Roles";
}

@functions
{
    int GetPreviousPage( int current )
    {
        return current <= 1 ? current : current - 1;
    }

    int GetNextPage( int current, int maximum )
    {
        return current == maximum ? current : current + 1;
    }
}

<article class="content" >
    <div class="items-list-page" >
        <div class="title-search-block" >
            <div class="title-block" >
                <div class="row" >
                    <div class="col-md-6" >
                        <h3 class="title" >
                            Roles
                            <a asp-action="New" class="btn btn-primary btn-sm rounded-s" >Add New</a>
                        </h3>
                    </div>
                </div>
            </div>
            <div class="items-search" >
                <form class="form-inline" >
                    <div class="input-group" >
                        <input class="boxed form-control rounded-s" name="query" placeholder="Role Name..." type="text" value="@Model.Query" >
                        <span class="input-group-btn" >
                            <button class="btn btn-secondary rounded-s" type="submit" >
                                <i class="fa fa-search" ></i>
                            </button>
                        </span>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <section class="section" >
        <div class="row" >
            <div class="col-md-12" >
                <div class="card" >
                    <div class="card-block" >
                        <div class="card-title-block" >
                            <section class="example" >
                                <div class="table-flip-scroll" >
                                    <table class="flip-content table table-bordered table-hover table-striped" >
                                        <thead class="flip-header" >
                                            <tr>
                                                <th>Id</th>
                                                <th>Role</th>
                                            </tr>
                                        </thead>
                                        <tbody>

                                            @foreach ( var role in Model.Roles )
                                            {
                                                <tr>
                                                    <td>@role.Id</td>
                                                    <td>
                                                        <a asp-controller="Roles" asp-action="Edit" asp-area="Backend" asp-route-id="@role.Id" />
                                                        @role.Name
                                                    </td>
                                                </tr>
                                            }

                                        </tbody>
                                    </table>
                                </div>
                            </section>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>


    @if ( Model.MaxPages > 1 )
    {
        <nav class="text-right" >
            <ul class="pagination" >
                <li class="page-item" >
                    <a href="@Url.Action( "Index", new { Model.Query, page = GetPreviousPage( Model.Page ) } )" class="page-link" >Next</a>
                </li>

                @for ( int i = 0; i < Model.MaxPages; i++ )
                {
                    <li class="page-item @( Model.Page == i + 1 ? "active" : string.Empty )" >
                        <a href="@Url.Action( "Index", new { Model.Query, page = i + 1 } )" class="page-link" >@( i + 1 )</a>
                    </li>
                }

                <li class="page-item" >
                    <a href="@Url.Action( "Index", new { Model.Query, page = GetNextPage( Model.Page, Model.MaxPages ) } )" class="page-link" >Next</a>
                </li>
            </ul>
        </nav>
    }

</article>